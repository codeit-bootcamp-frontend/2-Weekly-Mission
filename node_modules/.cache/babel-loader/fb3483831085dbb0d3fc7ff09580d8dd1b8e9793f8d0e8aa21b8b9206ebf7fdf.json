{"ast":null,"code":"var _jsxFileName = \"/Users/sooki/Desktop/2-weekly-mission/src/components/LinkList.js\";\nimport \"./LinkList.css\";\n\n// 카드 링크 생성 날짜 표시 함수\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction formatDate(value) {\n  const date = new Date(value);\n  return `${date.getFullYear()}. ${date.getMonth() + 1}. ${date.getDate()}`;\n}\n\n// 오늘로부터 카드 링크 생성 시간 계산 함수\nfunction elapsedText(value) {\n  const today = new Date().getTime();\n  const created = new Date(value).getTime();\n  const elapsedTime = Math.floor(today - created);\n  const minutes = Math.floor(elapsedTime / 1000 / 60);\n  const hours = Math.floor(elapsedTime / 1000 / 60 / 60);\n  const days = Math.floor(elapsedTime / 1000 / 60 / 60 / 24);\n  const months = Math.floor(elapsedTime / 1000 / 60 / 60 / 24 / 31);\n  const years = Math.floor(elapsedTime / 1000 / 60 / 60 / 24 / 31 / 12);\n  if (minutes < 2) return \"1 minutes ago\";\n  if (minutes < 60) return `${minutes} minutes ago`;\n  if (minutes < 60 * 24) return `${hours} hours ago`;\n  if (minutes < 60 * 48) return \"1 day ago\";\n  if (minutes < 60 * 24 * 31) return `${days} days ago`;\n  if (minutes < 60 * 24 * 61) return \"1 month ago\";\n  if (minutes < 60 * 24 * 31 * 12) return `${months} months ago`;\n  if (minutes < 60 * 24 * 31 * 24) return \"1 year ago\";\n  if (minutes => 60 * 24 * 31 * 24) return `${years} months ago`;\n}\n\n// 링크 카드 낱개 함수\nfunction LinkListItem({\n  item\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-img-wrap\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"card-img\",\n        src: item.imageSource,\n        alt: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test-wrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"elapsedText\",\n        children: elapsedText(item.createdAt)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"description\",\n        children: item.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"formatDate\",\n        children: formatDate(item.createdAt)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n// 링크 카드 리스트들 생성 함수\n_c = LinkListItem;\nexport function LinkList({\n  items\n}) {\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"card-list\",\n    children: items.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(LinkListItem, {\n          item: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_c2 = LinkList;\nvar _c, _c2;\n$RefreshReg$(_c, \"LinkListItem\");\n$RefreshReg$(_c2, \"LinkList\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","formatDate","value","date","Date","getFullYear","getMonth","getDate","elapsedText","today","getTime","created","elapsedTime","Math","floor","minutes","hours","days","months","years","LinkListItem","item","className","children","src","imageSource","alt","title","fileName","_jsxFileName","lineNumber","columnNumber","createdAt","description","_c","LinkList","items","map","id","_c2","$RefreshReg$"],"sources":["/Users/sooki/Desktop/2-weekly-mission/src/components/LinkList.js"],"sourcesContent":["import \"./LinkList.css\";\n\n// 카드 링크 생성 날짜 표시 함수\nfunction formatDate(value) {\n  const date = new Date(value);\n  return `${date.getFullYear()}. ${date.getMonth() + 1}. ${date.getDate()}`;\n}\n\n// 오늘로부터 카드 링크 생성 시간 계산 함수\nfunction elapsedText(value) {\n  const today = new Date().getTime();\n  const created = new Date(value).getTime();\n  const elapsedTime = Math.floor(today - created);\n\n  const minutes = Math.floor(elapsedTime / 1000 / 60);\n  const hours = Math.floor(elapsedTime / 1000 / 60 / 60);\n  const days = Math.floor(elapsedTime / 1000 / 60 / 60 / 24);\n  const months = Math.floor(elapsedTime / 1000 / 60 / 60 / 24 / 31);\n  const years = Math.floor(elapsedTime / 1000 / 60 / 60 / 24 / 31 / 12);\n\n  if (minutes < 2) return \"1 minutes ago\";\n  if (minutes < 60) return `${minutes} minutes ago`;\n  if (minutes < 60 * 24) return `${hours} hours ago`;\n  if (minutes < 60 * 48) return \"1 day ago\";\n  if (minutes < 60 * 24 * 31) return `${days} days ago`;\n  if (minutes < 60 * 24 * 61) return \"1 month ago\";\n  if (minutes < 60 * 24 * 31 * 12) return `${months} months ago`;\n  if (minutes < 60 * 24 * 31 * 24) return \"1 year ago\";\n  if ((minutes) => 60 * 24 * 31 * 24) return `${years} months ago`;\n}\n\n// 링크 카드 낱개 함수\nfunction LinkListItem({ item }) {\n  return (\n    <div className=\"card-container\">\n      <div className=\"card-img-wrap\">\n        <img className=\"card-img\" src={item.imageSource} alt={item.title} />\n      </div>\n      <div className=\"test-wrap\">\n        <p className=\"elapsedText\">{elapsedText(item.createdAt)}</p>\n        <h3 className=\"description\">{item.description}</h3>\n        <p className=\"formatDate\">{formatDate(item.createdAt)}</p>\n      </div>\n    </div>\n  );\n}\n\n// 링크 카드 리스트들 생성 함수\nexport function LinkList({ items }) {\n  return (\n    <ul className=\"card-list\">\n      {items.map((item) => {\n        return (\n          <li key={item.id}>\n            <LinkListItem item={item} />\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}