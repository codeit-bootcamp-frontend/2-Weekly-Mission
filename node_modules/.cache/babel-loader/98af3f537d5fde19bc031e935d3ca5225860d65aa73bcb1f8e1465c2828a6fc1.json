{"ast":null,"code":"var _jsxFileName = \"/Users/kim-yunsu/Desktop/weekly/weekly/src/components/Card.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Card({\n  data\n}) {\n  _s();\n  const formattedDate = formatDateString(data.createdAt);\n  const min = calculateElapsedTime(data.createdAt);\n  const [ago, setAgo] = useState(\"\");\n  useEffect(() => {\n    if (min < 2) {\n      setAgo(\"1 minute ago\");\n    } else if (min <= 59) {\n      setAgo(`${min} minutes ago`);\n    } else if (min / 60 <= 23) {\n      setAgo(`${Math.ceil(min / 60)} hour ago`);\n    } else if (min / 60 >= 24) {\n      setAgo(`1 day ago`);\n    } else if (min / 60 / 24 <= 30) {\n      setAgo(`${Math.ceil(min / 60 / 24)} days ago`);\n    } else if (min / 60 / 24 >= 31) {\n      setAgo(`1 month ago`);\n    } else if (min / 60 / 24 / 31 <= 11) {\n      setAgo(`${Math.ceil(min / 60 / 24 / 31)} months ago`);\n    } else if (min / 60 / 24 / 31 >= 12) {\n      setAgo(`${Math.ceil(min / 60 / 24 / 31)} year ago`);\n    } else {\n      setAgo(`${Math.ceil(min / 60 / 24 / 31 / 12)} years ago`);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `card card${data.id}`,\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      href: `${data.url}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cardImgWrap\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `${data.imageSource}`,\n          alt: `${data.title}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cardText\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"ago\",\n          children: `${ago}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"des\",\n          children: `${data.description}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"cardDate\",\n          children: `${formattedDate}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(Card, \"bbGspg4xKCFdr630ziMloODwJAc=\");\n_c = Card;\nfunction formatDateString(dateString) {\n  const date = new Date(dateString);\n  const year = date.getFullYear();\n  const month = String(date.getMonth() + 1).padStart(2, \"0\");\n  const day = String(date.getDate()).padStart(2, \"0\");\n  return `${year}-${month}-${day}`;\n}\nfunction calculateElapsedTime(dateString) {\n  const currentDate = new Date();\n  const targetDate = new Date(dateString);\n  const timeDifference = currentDate - targetDate;\n  const elapsedMinutes = Math.floor(timeDifference / (1000 * 60));\n  return elapsedMinutes;\n}\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Card","data","_s","formattedDate","formatDateString","createdAt","min","calculateElapsedTime","ago","setAgo","Math","ceil","className","id","children","href","url","src","imageSource","alt","title","fileName","_jsxFileName","lineNumber","columnNumber","description","_c","dateString","date","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","currentDate","targetDate","timeDifference","elapsedMinutes","floor","$RefreshReg$"],"sources":["/Users/kim-yunsu/Desktop/weekly/weekly/src/components/Card.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nfunction Card({ data }) {\n  const formattedDate = formatDateString(data.createdAt);\n\n  const min = calculateElapsedTime(data.createdAt);\n  const [ago, setAgo] = useState(\"\");\n\n  useEffect(() => {\n    if (min < 2) {\n      setAgo(\"1 minute ago\");\n    } else if (min <= 59) {\n      setAgo(`${min} minutes ago`);\n    } else if (min / 60 <= 23) {\n      setAgo(`${Math.ceil(min / 60)} hour ago`);\n    } else if (min / 60 >= 24) {\n      setAgo(`1 day ago`);\n    } else if (min / 60 / 24 <= 30) {\n      setAgo(`${Math.ceil(min / 60 / 24)} days ago`);\n    } else if (min / 60 / 24 >= 31) {\n      setAgo(`1 month ago`);\n    } else if (min / 60 / 24 / 31 <= 11) {\n      setAgo(`${Math.ceil(min / 60 / 24 / 31)} months ago`);\n    } else if (min / 60 / 24 / 31 >= 12) {\n      setAgo(`${Math.ceil(min / 60 / 24 / 31)} year ago`);\n    } else {\n      setAgo(`${Math.ceil(min / 60 / 24 / 31 / 12)} years ago`);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className={`card card${data.id}`}>\n      <a href={`${data.url}`}>\n        <div className=\"cardImgWrap\">\n          <img src={`${data.imageSource}`} alt={`${data.title}`} />\n        </div>\n        <div className=\"cardText\">\n          <p className=\"ago\">{`${ago}`}</p>\n          <p className=\"des\">{`${data.description}`}</p>\n          <p className=\"cardDate\">{`${formattedDate}`}</p>\n        </div>\n      </a>\n    </div>\n  );\n}\nfunction formatDateString(dateString) {\n  const date = new Date(dateString);\n  const year = date.getFullYear();\n  const month = String(date.getMonth() + 1).padStart(2, \"0\");\n  const day = String(date.getDate()).padStart(2, \"0\");\n\n  return `${year}-${month}-${day}`;\n}\nfunction calculateElapsedTime(dateString) {\n  const currentDate = new Date();\n  const targetDate = new Date(dateString);\n\n  const timeDifference = currentDate - targetDate;\n  const elapsedMinutes = Math.floor(timeDifference / (1000 * 60));\n\n  return elapsedMinutes;\n}\nexport default Card;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}